* Essentials of Programming Languages
** 1.1
"Write a syntactic derivation that proves ~(-7 . (3 . (14 . ())))~ is a list of
numbers."
#+BEGIN_EXAMPLE
   <list-of-numbers>
=> (<number> . <list-of-numbers>)
=> (<number> . (<number> . <list-of-numbers>))
=> (<number> . (<number> . (<number> . <list-of-numbers>)))
=> (-7 . (<number> . (<number> . <list-of-numbers>)))
=> (-7 . (3 . (<number> . <list-of-numbers>)))
=> (-7 . (3 . (14 . <list-of-numbers>)))
=> (-7 . (3 . (14 . ())))
#+END_EXAMPLE

** 1.2
"Rewrite the ~<datum>~ grammar without using the Kleene star or plus."
#+BEGIN_EXAMPLE
<list>         ::= () | <datum> | (<datum> <list>)
<dotted-datum> ::= (<datum> . <datum>)
               ::= (<datum> <dotted-datum>)
<vector>       ::= #()
               ::= #(<datum> . <vector>)
<datum         ::= <number> | <symbol> | <boolean> | <string>
               ::= <list> | <dotted-datum> | <vector>
#+END_EXAMPLE

"Indicate the changes to the above derivation that are required by this revised
grammar."
#+BEGIN_EXAMPLE
   <list>
=> (<datum> <list>)
=> (<datum> <datum> <list>)
=> (<datum> <datum> <datum>)
=> (<boolean> <datum> <datum>)
=> (#t <datum> <datum>)
=> (#t <dotted-datum> <datum>)
=> (#t (<datum> . <datum>) <datum>)
=> (#t (foo . <datum>) <datum>)
=> (#t (foo . <list>) <datum>)
=> (#t (foo . ()) <datum>)
=> (#t (foo . ()) 3)
#+END_EXAMPLE

** 1.3
"Write a syntactic derivation that proves ~(a "mixed" #(bag (of . data)))~ is a
datum, using either the grammar in the book or the revised grammar from the
preceding exercise."

Using grammar from the book:
#+BEGIN_EXAMPLE
   <list>
=> (<datum> <datum> <datum>)
=> (a <datum> <datum>)
=> (a "mixed" <datum>)
=> (a "mixed" #(<datum> <datum>))
=> (a "mixed" #(bag <datum>))
=> (a "mixed" #(bag <dotted-datum>))
=> (a "mixed" #(bag (<datum> . <datum>)))
=> (a "mixed" #(bag (of . <datum>)))
=> (a "mixed" #(bag (of . data)))
#+END_EXAMPLE

"What is wrong with ~(a . b . c)~?"

A dotted datum only has one dot, right before the final ~<datum>~. So it's
possible to write ~(a b . c)~ but not ~(a . b . c)~.
